apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.demo.aspectj"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }
}

dependencies {
    implementation "org.aspectj:aspectjrt:$aspectj_version"
}


import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.applicationVariants

//在构建工程时，执行编辑
variants.all { variant ->
//    if (!variant.buildType.isDebuggable()) {
//        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
//        return
//    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = [
                "-showWeaveInfo", "-1.9",
                "-inpath", javaCompile.destinationDir.toString(),
                "-aspectpath", javaCompile.classpath.asPath,
                "-d", javaCompile.destinationDir.toString(),
                "-classpath", javaCompile.classpath.asPath,
                "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)
        ]
        println "................aspectj args start................"
        for (int i = 0; i < args.length; i++) {
            if (i % 2 == 1) {
                continue
            }
            printf("------------------%s\nkey-->%s\nvalue-->%s\n", (int) (i / 2 + 1), args[i], args[i + 1])
        }
        println ".................aspectj args end................."

        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error "gxd-->" + message.message, message.thrown
                    break
                case IMessage.WARNING:
                    log.warn "gxd-->" + message.message, message.thrown
                    break
                case IMessage.INFO:
                    log.info "gxd-->" + message.message, message.thrown
                    break
                case IMessage.DEBUG:
                    log.debug "gxd-->" + message.message, message.thrown
                    break
            }
        }
    }
}